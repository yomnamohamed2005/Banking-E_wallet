@using Banking_E_Wallet.view_model;
@model loginviewmodel ;

@{
    ViewData["Title"] = "Login";
}



<form asp-action="login" method="post">
    <div class="form-group">
        <label for="name">Name</label>
        <input type="name" asp-for="name" class="form-control" id="name" placeholder="enter name" />
        <span asp-validation-for="name" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label for="password">Password</label>
        <input type="password" asp-for="password" class="form-control" id="password" placeholder="password" />
        <span asp-validation-for="password" class="text-danger"></span>
    </div>



    <button type="submit" class="btn btn-primary">Login</button>
</form>



@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
<script>
    btnLogin.addEventListener('click', function (e) {
        // Prevent form from submitting
        e.preventDefault();

        currentAccount = accounts.find(
            acc => acc.username === inputLoginUsername.value
        );
        console.log(currentAccount);

        if (currentAccount?.pin === +inputLoginPin.value) {
            // Display UI and message
            labelWelcome.textContent = `Welcome back, ${currentAccount.owner.split(' ')[0]
                }`;
            containerApp.style.opacity = 100;

            // const now = new Date();
            // const day = ${now.getDate()}.padStart(2, 0);
            // const month = ${now.getMonth() + 1}.padStart(2, 0);
            // const year = now.getFullYear();
            // const hours = ${now.getHours()}.padStart(2, 0);
            // const min = ${now.getMinutes()}.padStart(2, 0);
            // labelDate.textContent = ${day}/${month}/${year}, ${hours}:${min};
            const now = new Date();
            const options = {
                hour: 'numeric',
                minute: 'numeric',
                day: 'numeric',
                month: 'numeric',
                year: 'numeric',
                // weekday: 'short',
            };

            // const locale = navigator.language;
            // console.log(locale);

            labelDate.textContent = new Intl.DateTimeFormat(
                currentAccount.locale,
                options
            ).format(now);

            // Clear input fields
            inputLoginUsername.value = inputLoginPin.value = '';
            inputLoginPin.blur();

            if (timer) clearInterval(timer);
            timer = startLogOutTimer();

            // Update UI
            updateUI(currentAccount);

            backImg.classList.add('hidden');
            outButton.classList.remove('logout-hidden');
            signUp.classList.add('signUp-hidden');
        }
    });
</script>

